{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\camil\\\\OneDrive\\\\Escritorio\\\\programacion\\\\sumapp\\\\src\\\\components\\\\Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = () => {\n  _s();\n\n  const [state, setState] = useState({\n    num1: Math.ceil(Math.random() * 10),\n    num2: Math.ceil(Math.random() * 40),\n    response: \"\",\n    score: 0,\n    message: \"\",\n    incorrect: false\n  });\n\n  const inputKeyPress = event => {\n    if (event.key === \"Enter\") {\n      const answer = parseInt(state.response);\n      console.log(answer);\n\n      if (state.num1 + state.num2 === answer) {\n        setState({ ...state,\n          num1: Math.ceil(Math.random() * 10),\n          num2: Math.ceil(Math.random() * 30),\n          response: \"\",\n          score: state.score + 1,\n          message: \"That's correct!\",\n          incorrect: true\n        });\n      } else {\n        setState({ ...state,\n          response: \"\",\n          score: state.score - 1,\n          message: \"Wrong, try again\",\n          incorrect: true\n        });\n      }\n    }\n  };\n\n  const updateResponse = event => {\n    setState({ ...state,\n      response: event.target.value\n    });\n  };\n\n  if (state.score === 10) {\n    return /*#__PURE__*/_jsxDEV(Winner, {\n      children: \"You won!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Design, {\n    children: [/*#__PURE__*/_jsxDEV(Letter, {\n      children: [state.num1, \" + \", state.num2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      autoFocus: true,\n      onKeyPress: inputKeyPress,\n      onChange: updateResponse,\n      value: state.response,\n      placeholder: \"Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Size, {\n      children: state.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Size, {\n      children: [\"Score: \", state.score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Input, \"PDfrq8Un7O679JNfhI2iev2jF0M=\");\n\n_c = Input;\nconst Design = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 20px;\n    line-height: 30px;\n`;\n_c2 = Design;\nconst Letter = styled.label`\n    font-size: 25px;\n    margin-bottom: 20px;\n`;\n_c3 = Letter;\nconst Winner = styled.div`\n    font-size: 72px;\n    color: green;\n`;\n_c4 = Winner;\nconst Size = styled.p`\n    font-size: 22px;\n`;\n_c5 = Size;\nexport default Input;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"Design\");\n$RefreshReg$(_c3, \"Letter\");\n$RefreshReg$(_c4, \"Winner\");\n$RefreshReg$(_c5, \"Size\");","map":{"version":3,"sources":["C:/Users/camil/OneDrive/Escritorio/programacion/sumapp/src/components/Input.js"],"names":["React","useState","styled","Input","state","setState","num1","Math","ceil","random","num2","response","score","message","incorrect","inputKeyPress","event","key","answer","parseInt","console","log","updateResponse","target","value","Design","div","Letter","label","Winner","Size","p"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Input = () => {\r\n    const [state, setState] = useState({\r\n        num1: Math.ceil(Math.random() * 10),\r\n        num2: Math.ceil(Math.random() * 40),\r\n        response: \"\",\r\n        score: 0,\r\n        message: \"\",\r\n        incorrect: false\r\n    });\r\n\r\n    const inputKeyPress = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            const answer = parseInt(state.response)\r\n            console.log(answer);\r\n            if (state.num1 + state.num2 === answer) {\r\n                setState({\r\n                    ...state,\r\n                    num1: Math.ceil(Math.random() * 10),\r\n                    num2: Math.ceil(Math.random() * 30),\r\n                    response: \"\",\r\n                    score: state.score + 1,\r\n                    message: \"That's correct!\",\r\n                    incorrect: true\r\n                })\r\n            } else {\r\n                setState({\r\n                    ...state,\r\n                    response: \"\",\r\n                    score: state.score - 1,\r\n                    message: \"Wrong, try again\",\r\n                    incorrect: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateResponse = (event) => {\r\n        setState({\r\n            ...state,\r\n            response: event.target.value\r\n        })\r\n    }\r\n\r\n    if (state.score === 10) {\r\n        return (\r\n            <Winner>\r\n                You won!\r\n            </Winner>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Design>\r\n            <Letter>{state.num1} + {state.num2}</Letter>\r\n            <input autoFocus={true} onKeyPress={inputKeyPress} onChange={updateResponse} value={state.response} placeholder=\"Answer\" />\r\n            <Size>{state.message}</Size>\r\n            <Size>Score: {state.score}</Size>\r\n        </Design>\r\n    );\r\n}\r\n\r\nconst Design = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 20px;\r\n    line-height: 30px;\r\n`\r\n\r\nconst Letter = styled.label`\r\n    font-size: 25px;\r\n    margin-bottom: 20px;\r\n`\r\n\r\nconst Winner = styled.div`\r\n    font-size: 72px;\r\n    color: green;\r\n`\r\n\r\nconst Size = styled.p`\r\n    font-size: 22px;\r\n`\r\n\r\nexport default Input;"]},"metadata":{},"sourceType":"module"}